import { Base } from '@or-sdk/base';
import { DeployerConfig, Flow, PollingParams, PollingResultActivateSuccess, PollingResultDeactivateSuccess } from './types';
export declare class Deployer extends Base {
    constructor(params: DeployerConfig);
    removeRole(): Promise<void>;
    activateFlowNoPoll({ id, data: { deploy: { role } } }: Flow, interactiveDebug?: boolean): Promise<PollingParams>;
    activateFlow(flowSource: Flow, interactiveDebug?: boolean): Promise<PollingResultActivateSuccess>;
    deactivateFlowNoPoll({ id, data: { deploy: { role } } }: Flow, flowAlias: string, deleteLambda?: boolean): Promise<PollingParams>;
    deactivateFlow(flowSource: Flow, flowAlias: string, deleteLambda?: boolean): Promise<PollingResultDeactivateSuccess>;
    pollResult<T>({ flowId, requestId }: PollingParams): Promise<T>;
}
//# sourceMappingURL=Deployer.d.ts.map