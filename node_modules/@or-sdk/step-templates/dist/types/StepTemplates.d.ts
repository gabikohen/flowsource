import { List } from '@or-sdk/base';
import { DownloadStepDataParam, ListStepTemplatesParams, PaginationOptions, StepTemplate, StepTemplatesConfig } from './types';
export declare class StepTemplates {
    private readonly dataHubSvc;
    constructor(params: StepTemplatesConfig);
    listStepTemplates(params?: ListStepTemplatesParams, paginationOptions?: PaginationOptions): Promise<List<StepTemplate>>;
    getStepTemplateById(id: string, params?: ListStepTemplatesParams): Promise<StepTemplate>;
    download(stepTemplateData: DownloadStepDataParam, flowId: string): Promise<void>;
    static getNewStepTemplate(stepId?: string): {
        id: string;
        version: string;
        cacheVersion: string;
        label: string;
        icon: string;
        iconType: string;
        iconUrl: string;
        shape: string;
        description: string;
        dateCreated: number;
        dateModified: number;
        publishedBy: string;
        template: string;
        categories: never[];
        form: {
            style: string;
            template: string;
            code: string;
        };
        data: {
            exits: never[];
        };
        modules: never[];
        reporting: {
            step: {
                label: string;
                type: string;
                enabled: boolean;
                tags: never[];
            };
        };
        outputExample: null;
        formBuilder: {
            stepExits: {
                component: string;
                data: {
                    id: string;
                    label: string;
                };
            }[];
            stepInputs: never[];
            hasDataOut: boolean;
            hasProcessError: boolean;
            outputExample: null;
            formTemplate: string;
        };
        rawMode: boolean;
        hooks: null;
    };
}
//# sourceMappingURL=StepTemplates.d.ts.map