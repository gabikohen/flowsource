import { Token } from '@or-sdk/base';

export type StepTemplatesConfig = {
  /**
   * token
   */
  token: Token;

  /**
   * Url of OneReach service discovery api
   */
  discoveryUrl?: string;

  /**
   * Account ID for cross-account requests (super admin only)
   */
  accountId?: string;

  /**
   * Url of OneReach DataHubSvc api
   */
  dataHubSvcUrl?: string;
};

export type StepTemplate = {
  id: string;
  version: string;
  label: string;
  data: {
    [keys: string]: unknown;
  };
};

export type ListStepTemplatesParams = {
  query?: {
    [key: string]: unknown;
  };
  projection?: string[];
  group?: string[];
  sandbox?: boolean;
};

export type PaginationOptions = {
  limit?: number;
  offset?: number;
};

export type DownloadStepDataParam = {
  version?: string;
  isExternal?: boolean;
  isSandbox?: boolean;
  id: string;
  [key: string]: unknown;
};


export type StepTemplateExit = {
  id: string;
  label: string;
};

export type StepTemplateKeyword = {
  keyword: string;
};

export type StepTemplateFormBuilderStepExit = {
  compiled?: {
    exits: [
      {
        id: string;
        label: string;
      }
    ];
  };
  component?: string;
  data?: {
    id?: string;
    label?: string;
    index?: 0;
  };
  id: string;
};

export type StepTemplateStepInput = {
  compiled: {
    [key: string]: unknown;
  };
  component: string;
  data: {
    [key: string]: unknown;
  };
  id: string;
  label: string;
};

export type StepTemplateMigration = {
  version: string;
  script: string | null;
  sample: {
    [key: string]: unknown;
  } | null;
};

export type StepTemplateRaw = {
  id: string;
  version: string;
  cacheVersion: string;
  source: unknown | null;
  label: string;
  icon: string;
  iconType: string;
  iconUrl: string;
  shape: string;
  description: string;
  isGatewayStep: boolean | null;
  publishedBy: string;
  categories: string[];
  recommended: unknown | null;
  tags: string[] | null;
  template: string;
  accountId?: string;
  flowId?: string;
  form: {
    template: string | null;
    code: string | null;
    component: string | null;
    style: string | null;
  };
  data: {
    allCheckedNumbers: unknown[];
    dataOut: string;
    exits: StepTemplateExit[];
    groups: unknown[];
    isKeywords: boolean;
    keywords: StepTemplateKeyword[];
    keywordsValues: unknown[];
    numbers: unknown[];
    selectedElemLength: number;
    selectedGroups: unknown[];
    selectedNumbers: unknown[];
    sessionTimeout: string;
    showAll: boolean;
  };
  validationSchema: string | null;
  reporting: {
    session?: {
      enabled: boolean;
      label: string;
      tags: string[];
      type: string;
    };
    step?: {
      enabled: boolean;
      label: string;
      tags: string[];
      type: string;
    };
    transcript?: {
      enabled: boolean;
      label: string;
      tags: string[];
      type: string;
    };
  };
  stepInputData: {
    [key: string]: unknown;
  } | null;
  outputExample: {
    [key: string]: unknown;
  };
  help: string;
  formBuilder: {
    formCode: string;
    formTemplate: string;
    hasDataOut: boolean;
    hasProcessError: boolean;
    outputExample: string;
    stepExits: StepTemplateFormBuilderStepExit[];
    stepInputs: StepTemplateStepInput[];
  };
  rawMode: boolean;
  tour: unknown[];
  meta: unknown | null;
  migrations: StepTemplateMigration[] | null;
  modules: unknown | null;
  dateCreated: number | null;
  dateModified: number | null;
  hooks: unknown | null;
};
