import { Method } from 'axios';
import { OrderDirection } from './constants';

export { AxiosError } from 'axios';

export interface BaseConfig {
  /**
   * token or token getter
   */
  token: Token;

  /**
   * Url of OneReach service discovery api
   */
  discoveryUrl?: string;

  /**
   * Service key
   */
  serviceKey: string;

  /**
   * Can be used to access to api deployed on feature sub domain
   */
  feature?: string;

  /**
   * Account ID for cross-account requests (super admin only)
   */
  accountId?: string;

  /**
  * Direct service url, can be used to avoid discovery api call
  */
  serviceUrl?: string;

  /**
   * Use built-in axios serializer
   */
  useDefaultSerializer?: boolean;

  /**
   * @deprecated used for migration stage only
   */
  requestAccountId?: boolean;

  /**
   * @deprecated used for migration stage only
   */
  requestProvidersAccountId?: boolean;
}

export type Token = string | (() => string);

export interface Headers {
  Authorization: string;
  'Content-Type': string;
}
export interface CustomHeaders {
  [key: string]: string;
}

export interface CalApiParams {
  route: string;
  method?: Method;
  params?: unknown;
  data?: unknown;
  signal?: AbortSignal;
  url?: string;
  customHeaders?: CustomHeaders;
}

export type PaginationOptions = {
  from: number;
  size: number;
};

export type OrderOptions = {
  orderProperty: string;
  orderDirection: OrderDirection;
};

export interface List<T> {
  total: number;
  items: T[];
}

export interface ServiceDiscoveryResponse {
  url: string;
  version?: string;
}

export interface MakeApiUrlData {
  url: string;
  version?: string;
  accountId?: string;
}
