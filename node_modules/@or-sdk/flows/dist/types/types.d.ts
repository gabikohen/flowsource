import { Token } from '@or-sdk/base';
export declare type FlowsConfig = {
    token: Token;
    discoveryUrl?: string;
    accountId?: string;
    dataHubSvcUrl?: string;
    deployerUrl?: string;
};
export declare type ListFlowsParams = {
    includeDeleted?: boolean;
    includeExisting?: boolean;
    query?: {
        [key: string]: unknown;
    };
    projection?: string[];
    group?: string[];
    sandbox?: boolean;
};
export declare type ListDataOutsParams = {
    query?: {
        [key: string]: unknown;
    };
    projection?: string[];
    group?: string[];
    sandbox?: boolean;
};
export declare type PaginationOptions = {
    limit?: number;
    offset?: number;
};
export declare type GetFlowParams = {
    query?: {
        [key: string]: unknown;
    };
    projection?: string[];
    sandbox?: boolean;
};
export declare type DataOut = {
    flowId: string;
    botId: string;
    name: string;
    type: string;
    ttl: number;
    meta: string;
    outputExample: string;
    stepLabel: string;
    stepId: string;
};
export declare type StepTemplateToDelete = {
    id: string;
    [key: string]: unknown;
};
export declare type DownloadTemplateResult = {
    id: string;
    data: {
        label: string;
    };
};
//# sourceMappingURL=types.d.ts.map