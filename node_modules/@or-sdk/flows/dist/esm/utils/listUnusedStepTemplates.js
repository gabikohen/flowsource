function listUnusedStepTemplates(source) {
    var _a, _b;
    const treesObj = ((_a = source === null || source === void 0 ? void 0 : source.data) === null || _a === void 0 ? void 0 : _a.trees) || {};
    const trees = Object.keys(treesObj).map(key => treesObj[key].steps);
    const stepTemplates = ((_b = source === null || source === void 0 ? void 0 : source.data) === null || _b === void 0 ? void 0 : _b.stepTemplates) || [];
    const usedTemplateIds = trees.reduce((acc, tree) => {
        tree.forEach(step => {
            if (acc.indexOf(step.type) === -1) {
                acc.push(step.type);
            }
        });
        return acc;
    }, []);
    return stepTemplates.filter(template => usedTemplateIds.indexOf(template.id) === -1);
}
export default listUnusedStepTemplates;
//# sourceMappingURL=listUnusedStepTemplates.js.map